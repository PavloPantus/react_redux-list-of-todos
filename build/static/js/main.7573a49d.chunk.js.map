{"version":3,"sources":["store.js","helpers.js","User.js","TodoItem.js","TodoList.js","api.js","App.js","index.js"],"names":["setArrayOfTodosAndUsersActionCreator","value","type","getArrayOfTodosAndUsers","state","arrayOfTodosAndUsers","getIsLoadingArrayOfTodosAndUsers","isLoadingArrayOfTodosAndUsers","getIsLoadedArrayOfTodosAndUsers","isLoadedArrayOfTodosAndUsers","getActiveSortField","activeSortField","getReverseStatus","reverseStatus","store","createStore","action","Object","objectSpread2","getDataFromServer","dataUrl","serverHeading","dataFromServer","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","json","abrupt","stop","User","_ref","user","name","classNames","require","connect","dispatch","setArrayOfTodosAndUsers","todo","react_default","createElement","className","title","src_User","completed","not-completed","onClick","filter","oldTodo","id","TodoList","setIsLoadingArrayOfTodosAndUsers","setIsLoadedArrayOfTodosAndUsers","setActiveSortField","setReverseStatus","getSortMethod","sortfield","length","typeOfValue","b","localeCompare","console","log","visibleTodos","toConsumableArray","sort","reverse","Fragment","disabled","_ref2","_ref3","todos","users","Promise","all","slicedToArray","map","find","userId","item","key","toLowerCase","src_TodoItem","defaultProps","setIsLoadingArrayOfTodosAndUsersActionCreator","setIsLoadedArrayOfTodosAndUsersActionCreator","setActiveSortFieldActionCreator","setReverseStatusActionCreator","App","src_TodoList","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7573a49d.chunk.js","sourcesContent":["/* eslint-disable camelcase */\nimport { createStore } from 'redux';\n\n// action types\nconst TYPE_SetArrayOfTodosAndUsers = (\n  'setArrayOfTodosAndUsers'\n);\nconst TYPE_SetIsLoadingArrayOfTodosAndUsers = (\n  'setIsLoadingArrayOfTodosAndUsers'\n);\nconst TYPE_SetIsLoadedArrayOfTodosAndUsers = (\n  'setIsLoadedArrayOfTodosAndUsers'\n);\nconst TYPE_SetActiveSortField = 'setActiveSortField';\nconst TYPE_SetReverseStatus = 'setReverseStatus';\n\n// action creators\nexport const setArrayOfTodosAndUsersActionCreator = value => ({\n  type: TYPE_SetArrayOfTodosAndUsers, value,\n});\nexport const setIsLoadingArrayOfTodosAndUsersActionCreator = value => ({\n  type: TYPE_SetIsLoadingArrayOfTodosAndUsers, value,\n});\nexport const setIsLoadedArrayOfTodosAndUsersActionCreator = value => ({\n  type: TYPE_SetIsLoadedArrayOfTodosAndUsers, value,\n});\nexport const setActiveSortFieldActionCreator = value => ({\n  type: TYPE_SetActiveSortField, value,\n});\nexport const setReverseStatusActionCreator = value => ({\n  type: TYPE_SetReverseStatus, value,\n});\n\n// selectors\nexport const getArrayOfTodosAndUsers = state => state.arrayOfTodosAndUsers;\nexport const getIsLoadingArrayOfTodosAndUsers = state => (\n  state.isLoadingArrayOfTodosAndUsers\n);\nexport const getIsLoadedArrayOfTodosAndUsers = state => (\n  state.isLoadedArrayOfTodosAndUsers\n);\nexport const getActiveSortField = state => state.activeSortField;\nexport const getReverseStatus = state => state.reverseStatus;\n\n// reducer\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case TYPE_SetArrayOfTodosAndUsers:\n      return {\n        ...state, arrayOfTodosAndUsers: action.value,\n      };\n\n    case TYPE_SetIsLoadingArrayOfTodosAndUsers: return {\n      ...state,\n      isLoadingArrayOfTodosAndUsers: action.value,\n    };\n\n    case TYPE_SetIsLoadedArrayOfTodosAndUsers: return {\n      ...state,\n      isLoadedArrayOfTodosAndUsers: action.value,\n    };\n\n    case TYPE_SetActiveSortField: return {\n      ...state,\n      activeSortField: action.value,\n    };\n\n    case TYPE_SetReverseStatus: return {\n      ...state,\n      reverseStatus: action.value,\n    };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, {\n  arrayOfTodosAndUsers: [],\n  isLoadingArrayOfTodosAndUsers: false,\n  isLoadedArrayOfTodosAndUsers: false,\n  activeSortField: '',\n  reverseStatus: false,\n});\n\nexport default store;\n","export const getDataFromServer = async(dataUrl) => {\n  const serverHeading = await fetch(dataUrl);\n  const dataFromServer = await serverHeading.json();\n\n  return dataFromServer;\n};\n","\nconst User = ({ user }) => (\n  user.name\n);\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setArrayOfTodosAndUsersActionCreator,\n  getArrayOfTodosAndUsers } from './store';\n\nimport User from './User';\n\nconst classNames = require('classnames');\n\nconst TodoItem = (\n  { todo,\n    setArrayOfTodosAndUsers,\n    arrayOfTodosAndUsers }\n) => (\n  <tr className=\"list-of-todos__row\">\n    <td className=\"list-of-todos__cell\">\n      {todo.title}\n    </td>\n    <td className=\"list-of-todos__cell\">\n      <User user={todo.user} />\n    </td>\n    <td className={\n      classNames(\n        'list-of-todos__cell',\n        {\n          completed: todo.completed,\n          'not-completed': !todo.completed,\n        },\n      )\n    }\n    >\n      {todo.completed ? 'completed' : 'not completed'}\n    </td>\n    <td className=\"list-of-todos__cell\">\n      <button\n        type=\"button\"\n        onClick={() => {\n          setArrayOfTodosAndUsers(\n            arrayOfTodosAndUsers.filter(\n              oldTodo => oldTodo.id !== todo.id\n            )\n          );\n        }}\n        className=\"button button_remove\"\n      >\n          delete\n      </button>\n    </td>\n  </tr>\n);\n\nconst getData = state => ({\n  arrayOfTodosAndUsers: getArrayOfTodosAndUsers(state),\n});\n\nconst getMethods = dispatch => ({\n  setArrayOfTodosAndUsers: value => dispatch(\n    setArrayOfTodosAndUsersActionCreator(value)\n  ),\n});\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }),\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  setArrayOfTodosAndUsers: PropTypes.func.isRequired,\n  arrayOfTodosAndUsers: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n};\n\nexport default connect(getData, getMethods)(TodoItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  getArrayOfTodosAndUsers,\n  setArrayOfTodosAndUsersActionCreator,\n  getIsLoadingArrayOfTodosAndUsers,\n  setIsLoadingArrayOfTodosAndUsersActionCreator,\n  getIsLoadedArrayOfTodosAndUsers,\n  setIsLoadedArrayOfTodosAndUsersActionCreator,\n  getActiveSortField,\n  setActiveSortFieldActionCreator,\n  getReverseStatus,\n  setReverseStatusActionCreator,\n} from './store';\n\nimport { todosUrl, usersUrl } from './api';\nimport { getDataFromServer } from './helpers';\n\nimport TodoItem from './TodoItem';\n\nconst TodoList = (\n  {\n    arrayOfTodosAndUsers,\n    setArrayOfTodosAndUsers,\n    isLoadingArrayOfTodosAndUsers,\n    setIsLoadingArrayOfTodosAndUsers,\n    isLoadedArrayOfTodosAndUsers,\n    setIsLoadedArrayOfTodosAndUsers,\n    activeSortField,\n    setActiveSortField,\n    reverseStatus,\n    setReverseStatus,\n  }\n) => {\n  const loadArrayOfTodosAndUsers = async() => {\n    setIsLoadingArrayOfTodosAndUsers(true);\n\n    const [todos, users] = await Promise.all(\n      [getDataFromServer(todosUrl), getDataFromServer(usersUrl)]\n    );\n\n    setArrayOfTodosAndUsers(\n      todos.map(\n        todo => ({\n          ...todo, user: users.find(user => user.id === todo.userId),\n        })\n      )\n    );\n\n    setIsLoadingArrayOfTodosAndUsers(false);\n    setIsLoadedArrayOfTodosAndUsers(true);\n  };\n\n  const getSortMethod = (sortfield) => {\n    if (arrayOfTodosAndUsers.length === 0) {\n      return () => 1;\n    }\n\n    if (activeSortField === '') {\n      return () => 1;\n    }\n\n    const typeOfValue = typeof arrayOfTodosAndUsers[0][sortfield];\n\n    if (typeOfValue === 'string') {\n      return (a, b) => a[sortfield].localeCompare(b[sortfield]);\n    }\n\n    if (typeOfValue === 'boolean'\n      || typeOfValue === 'number'\n    ) {\n      return (a, b) => a[sortfield] - b[sortfield];\n    }\n\n    return () => 1;\n  };\n\n  const headings = ['Title', 'User', 'Completed', 'Remove item'];\n\n  console.log(getSortMethod());\n\n  let visibleTodos = [...arrayOfTodosAndUsers].sort(\n    getSortMethod(activeSortField)\n  );\n\n  if (reverseStatus) {\n    visibleTodos = visibleTodos.reverse();\n  }\n\n  return (\n    <>\n      {isLoadedArrayOfTodosAndUsers ? ''\n        : (\n          <button\n            type=\"button\"\n            disabled={isLoadingArrayOfTodosAndUsers}\n            onClick={loadArrayOfTodosAndUsers}\n          >\n            {isLoadingArrayOfTodosAndUsers\n              ? 'loading...' : 'download list'}\n          </button>\n        )}\n\n      {\n        isLoadedArrayOfTodosAndUsers\n          ? (\n            <table className=\"list-of-todos\">\n              <thead>\n                <tr>\n                  {headings.map(\n                    item => (\n                      <th\n                        key={item}\n                        onClick={() => {\n                          setActiveSortField(\n                            item.toLowerCase() === 'user'\n                              ? 'user.name' : item.toLowerCase()\n                          );\n\n                          setReverseStatus(\n                            (activeSortField === item.toLowerCase()\n                              || activeSortField === 'user.name')\n                              ? !reverseStatus : reverseStatus\n                          );\n                        }}\n                        className=\"list-of-todos__heading list-of-todos__cell\"\n                      >\n                        {item}\n                      </th>\n                    )\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {visibleTodos.map(\n                  todo => <TodoItem key={todo.id} todo={todo} />\n                )}\n              </tbody>\n            </table>\n          )\n          : ''\n      }\n    </>\n  );\n};\n\nconst getData = state => ({\n  arrayOfTodosAndUsers: getArrayOfTodosAndUsers(state),\n  isLoadingArrayOfTodosAndUsers: getIsLoadingArrayOfTodosAndUsers(state),\n  isLoadedArrayOfTodosAndUsers: getIsLoadedArrayOfTodosAndUsers(state),\n  activeSortField: getActiveSortField(state),\n  reverseStatus: getReverseStatus(state),\n});\n\nconst getMethods = dispatch => ({\n  setArrayOfTodosAndUsers: value => dispatch(\n    setArrayOfTodosAndUsersActionCreator(value)\n  ),\n  setIsLoadingArrayOfTodosAndUsers: value => dispatch(\n    setIsLoadingArrayOfTodosAndUsersActionCreator(value)\n  ),\n  setIsLoadedArrayOfTodosAndUsers: value => dispatch(\n    setIsLoadedArrayOfTodosAndUsersActionCreator(value)\n  ),\n  setActiveSortField: value => dispatch(\n    setActiveSortFieldActionCreator(value)\n  ),\n  setReverseStatus: value => dispatch(\n    setReverseStatusActionCreator(value)\n  ),\n});\n\nTodoList.propTypes = {\n  arrayOfTodosAndUsers: PropTypes.arrayOf(PropTypes.object),\n  setArrayOfTodosAndUsers: PropTypes.func.isRequired,\n  isLoadingArrayOfTodosAndUsers: PropTypes.bool.isRequired,\n  setIsLoadingArrayOfTodosAndUsers: PropTypes.func.isRequired,\n  isLoadedArrayOfTodosAndUsers: PropTypes.bool.isRequired,\n  setIsLoadedArrayOfTodosAndUsers: PropTypes.func.isRequired,\n  activeSortField: PropTypes.string.isRequired,\n  setActiveSortField: PropTypes.func.isRequired,\n  reverseStatus: PropTypes.bool.isRequired,\n  setReverseStatus: PropTypes.func.isRequired,\n\n};\n\nTodoList.defaultProps = {\n  arrayOfTodosAndUsers: [],\n};\n\nexport default connect(getData, getMethods)(TodoList);\n","export const todosUrl = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const usersUrl = 'https://jsonplaceholder.typicode.com/users';\n","import React from 'react';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Todo list app</h1>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}